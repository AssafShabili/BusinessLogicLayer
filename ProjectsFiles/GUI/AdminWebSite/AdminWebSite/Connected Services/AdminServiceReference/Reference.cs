//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminWebSite.AdminServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceReference.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAdminPercentageTable", ReplyAction="http://tempuri.org/IAdminService/GetAdminPercentageTableResponse")]
        System.Data.DataTable GetAdminPercentageTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAdminPercentageTable", ReplyAction="http://tempuri.org/IAdminService/GetAdminPercentageTableResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAdminPercentageTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetAdminPercentageLowestWinrate", ReplyAction="http://tempuri.org/IAdminService/SetAdminPercentageLowestWinrateResponse")]
        void SetAdminPercentageLowestWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetAdminPercentageLowestWinrate", ReplyAction="http://tempuri.org/IAdminService/SetAdminPercentageLowestWinrateResponse")]
        System.Threading.Tasks.Task SetAdminPercentageLowestWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetUpdateAdminPercentageHighestWinrate", ReplyAction="http://tempuri.org/IAdminService/SetUpdateAdminPercentageHighestWinrateResponse")]
        void SetUpdateAdminPercentageHighestWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetUpdateAdminPercentageHighestWinrate", ReplyAction="http://tempuri.org/IAdminService/SetUpdateAdminPercentageHighestWinrateResponse")]
        System.Threading.Tasks.Task SetUpdateAdminPercentageHighestWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetAdminPercentageHighestCurrentWinrate", ReplyAction="http://tempuri.org/IAdminService/SetAdminPercentageHighestCurrentWinrateResponse")]
        void SetAdminPercentageHighestCurrentWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetAdminPercentageHighestCurrentWinrate", ReplyAction="http://tempuri.org/IAdminService/SetAdminPercentageHighestCurrentWinrateResponse")]
        System.Threading.Tasks.Task SetAdminPercentageHighestCurrentWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetAdminPercentageLowestCurrentWinrate", ReplyAction="http://tempuri.org/IAdminService/SetAdminPercentageLowestCurrentWinrateResponse")]
        void SetAdminPercentageLowestCurrentWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SetAdminPercentageLowestCurrentWinrate", ReplyAction="http://tempuri.org/IAdminService/SetAdminPercentageLowestCurrentWinrateResponse")]
        System.Threading.Tasks.Task SetAdminPercentageLowestCurrentWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetNumberOfCurrentUsers", ReplyAction="http://tempuri.org/IAdminService/GetNumberOfCurrentUsersResponse")]
        int GetNumberOfCurrentUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetNumberOfCurrentUsers", ReplyAction="http://tempuri.org/IAdminService/GetNumberOfCurrentUsersResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfCurrentUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetNumberOfCurrentTowers", ReplyAction="http://tempuri.org/IAdminService/GetNumberOfCurrentTowersResponse")]
        int GetNumberOfCurrentTowers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetNumberOfCurrentTowers", ReplyAction="http://tempuri.org/IAdminService/GetNumberOfCurrentTowersResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfCurrentTowersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : AdminWebSite.AdminServiceReference.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<AdminWebSite.AdminServiceReference.IAdminService>, AdminWebSite.AdminServiceReference.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAdminPercentageTable() {
            return base.Channel.GetAdminPercentageTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAdminPercentageTableAsync() {
            return base.Channel.GetAdminPercentageTableAsync();
        }
        
        public void SetAdminPercentageLowestWinrate(double percentage) {
            base.Channel.SetAdminPercentageLowestWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetAdminPercentageLowestWinrateAsync(double percentage) {
            return base.Channel.SetAdminPercentageLowestWinrateAsync(percentage);
        }
        
        public void SetUpdateAdminPercentageHighestWinrate(double percentage) {
            base.Channel.SetUpdateAdminPercentageHighestWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetUpdateAdminPercentageHighestWinrateAsync(double percentage) {
            return base.Channel.SetUpdateAdminPercentageHighestWinrateAsync(percentage);
        }
        
        public void SetAdminPercentageHighestCurrentWinrate(double percentage) {
            base.Channel.SetAdminPercentageHighestCurrentWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetAdminPercentageHighestCurrentWinrateAsync(double percentage) {
            return base.Channel.SetAdminPercentageHighestCurrentWinrateAsync(percentage);
        }
        
        public void SetAdminPercentageLowestCurrentWinrate(double percentage) {
            base.Channel.SetAdminPercentageLowestCurrentWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetAdminPercentageLowestCurrentWinrateAsync(double percentage) {
            return base.Channel.SetAdminPercentageLowestCurrentWinrateAsync(percentage);
        }
        
        public int GetNumberOfCurrentUsers() {
            return base.Channel.GetNumberOfCurrentUsers();
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfCurrentUsersAsync() {
            return base.Channel.GetNumberOfCurrentUsersAsync();
        }
        
        public int GetNumberOfCurrentTowers() {
            return base.Channel.GetNumberOfCurrentTowers();
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfCurrentTowersAsync() {
            return base.Channel.GetNumberOfCurrentTowersAsync();
        }
    }
}
