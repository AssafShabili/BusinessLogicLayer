//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminWebSite.ServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.AdminWebServiceSoap")]
    public interface AdminWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminPercentageTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAdminPercentageTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminPercentageTable", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAdminPercentageTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAdminPercentageLowestWinrate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetAdminPercentageLowestWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAdminPercentageLowestWinrate", ReplyAction="*")]
        System.Threading.Tasks.Task SetAdminPercentageLowestWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetUpdateAdminPercentageHighestWinrate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetUpdateAdminPercentageHighestWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetUpdateAdminPercentageHighestWinrate", ReplyAction="*")]
        System.Threading.Tasks.Task SetUpdateAdminPercentageHighestWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAdminPercentageHighestCurrentWinrate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetAdminPercentageHighestCurrentWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAdminPercentageHighestCurrentWinrate", ReplyAction="*")]
        System.Threading.Tasks.Task SetAdminPercentageHighestCurrentWinrateAsync(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAdminPercentageLowestCurrentWinrate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetAdminPercentageLowestCurrentWinrate(double percentage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetAdminPercentageLowestCurrentWinrate", ReplyAction="*")]
        System.Threading.Tasks.Task SetAdminPercentageLowestCurrentWinrateAsync(double percentage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AdminWebServiceSoapChannel : AdminWebSite.ServiceReference.AdminWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminWebServiceSoapClient : System.ServiceModel.ClientBase<AdminWebSite.ServiceReference.AdminWebServiceSoap>, AdminWebSite.ServiceReference.AdminWebServiceSoap {
        
        public AdminWebServiceSoapClient() {
        }
        
        public AdminWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAdminPercentageTable() {
            return base.Channel.GetAdminPercentageTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAdminPercentageTableAsync() {
            return base.Channel.GetAdminPercentageTableAsync();
        }
        
        public void SetAdminPercentageLowestWinrate(double percentage) {
            base.Channel.SetAdminPercentageLowestWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetAdminPercentageLowestWinrateAsync(double percentage) {
            return base.Channel.SetAdminPercentageLowestWinrateAsync(percentage);
        }
        
        public void SetUpdateAdminPercentageHighestWinrate(double percentage) {
            base.Channel.SetUpdateAdminPercentageHighestWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetUpdateAdminPercentageHighestWinrateAsync(double percentage) {
            return base.Channel.SetUpdateAdminPercentageHighestWinrateAsync(percentage);
        }
        
        public void SetAdminPercentageHighestCurrentWinrate(double percentage) {
            base.Channel.SetAdminPercentageHighestCurrentWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetAdminPercentageHighestCurrentWinrateAsync(double percentage) {
            return base.Channel.SetAdminPercentageHighestCurrentWinrateAsync(percentage);
        }
        
        public void SetAdminPercentageLowestCurrentWinrate(double percentage) {
            base.Channel.SetAdminPercentageLowestCurrentWinrate(percentage);
        }
        
        public System.Threading.Tasks.Task SetAdminPercentageLowestCurrentWinrateAsync(double percentage) {
            return base.Channel.SetAdminPercentageLowestCurrentWinrateAsync(percentage);
        }
    }
}
